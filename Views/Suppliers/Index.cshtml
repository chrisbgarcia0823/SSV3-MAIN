@model IEnumerable<ShopSuppliesV3.ViewModel.Suppliers>
@using ShopSuppliesV3.Helpers

@{
    ViewData["Title"] = "Supplier List";
    if (LayoutSelector.AccessType(User.Identity.Name.Substring(5)).ToLower() == "user")
    {
        Layout = "~/Views/Shared/adminLTE/_StoreLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/adminLTE/_Layout.cshtml";
    }
}

@section Styles
{
    @*FOR ALERTS*@
    <link href="~/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/plugins/toastr/toastr.min.css" rel="stylesheet" />

    @*FOR DATATABLE*@
    <link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">

}

<div class="card card-outline card-danger">
    <div class="card-header">
        <h3>Supplier List</h3>
        <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#modalAdd" id="showModalAdd">Add Supplier</button>
    </div>
    <div class="card-body">
        <div id="example1_wrapper" class="dataTables_wrapper dt-bootstrap4">
            <div class="row">
                <div class="col-sm-12">
                    <div class="table-responsive">                       
                     <table id="supplier" class="table table-bordered table-striped dataTable dtr-inline" aria-describedby="example1_info">
                            <thead>
                                <tr>
                                    <td>Id</td>
                                    <td>Supplier Name</td>
                                    <td>Added By</td>
                                    <td>Date Added</td>
                                    <td></td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.Id</td>
                                        <td name="SupplierNames">@item.SupplierName</td>
                                        <td>@item.AddedByName</td>
                                        <td>@item.DateAdded.ToString("g")</td>
                                        <td class="text-center">
                                            <div class="btn-group">
                                                <button class="btn btn-warning" id="showEditDelete" value="@item.SupplierName" onclick="showEditModal(@item.Id, this.value)">Edit</button> &nbsp;
                                                <button class="btn btn-danger" id="showModalDelete" value="@item.SupplierName" onclick="showDeleteModal(@item.Id, this.value)">Delete</button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*MODAL FOR ADDING SUPPLIER*@
<div id="modalAdd" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog">
        <form asp-action="CreateSupplier" id="CreateSupplierForm" method="post">
            <div class="modal-content" id="SupplierModalAdd">
                <div class="modal-header bg-success">
                    <h3>Add New Supplier</h3>
                </div>
                <div class="modal-body">

                    <div class="form-group row">
                        <label for="SupplierName">Supplier Name</label> <span class="text-danger">*</span>
                        <input type="text" class="form-control" id="SupplierName" name="SupplierName" />
                        <span id="SupplierNameSpan" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col">
                        <button type="button" class="btn btn-primary" onclick="addNewSupplier()">Add Supplier</button>
                    </div>
                    <div class="col text-right">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@*MODAL FOR EDITING SUPPLIER*@
<div id="modalEdit" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog">
        <form asp-action="EditSupplier" id="EditSupplierForm" method="post">
            <input type="hidden" id="EditSupplierId" name="EditSupplierId" />
            <input type="hidden" id="OldSupplierName" name="OldSupplierName" />
            <div class="modal-content" id="SupplierModalEdit">
                <div class="modal-header bg-warning">
                    <h3 id="EditSupplierTitle"></h3>
                </div>
                <div class="modal-body">
                    <div class="callout callout-danger text-sm">
                        <div class="row">
                            <div class="col-md-11">
                                <h6 class="font-weight-bold text-danger">Attention</h6>
                                <div class="text-dark">
                                    You cannot edit supplier that are already used in the previous item creation.
                                </div>
                            </div>
                            <div class="col-md-1 d-flex text-right">
                                <h3 class="my-auto w-100 text-danger pr-2" style="opacity: 0.5;"><i class="fa fa-exclamation-triangle"></i></h3>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group row">
                        <label for="NewSupplierName">Edit Supplier Name</label> <span class="text-danger">*</span>
                        <input type="text" class="form-control" id="NewSupplierName" name="NewSupplierName" />
                        <span id="SupplierNameSpanEdit" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col">
                        <button type="button" class="btn btn-primary" onclick="editConfirm()">Ok</button>
                    </div>
                    <div class="col text-right">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@*MODAL FOR THE DELETE*@
<div id="modalDelete" class="modal fade" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <form asp-action="DeleteSupplier" id="DeleteSupplierForm" method="post">
            <input type="hidden" id="SupplierId" name="SupplierId" />
            <input type="hidden" id="DeleteSupplierName" name="DeleteSupplierName" />
            <div class="modal-content" id="SupplierModalDelete">
                <div class="modal-header bg-danger">
                    <h3 id="modalDeleteTitle"></h3>
                </div>
                <div class="modal-body">
                    <div class="callout callout-danger text-sm">
                        <div class="row">
                            <div class="col-md-11">
                                <h6 class="font-weight-bold text-danger">Attention</h6>
                                <div class="text-dark">
                                    You cannot delete supplier that are already used in the previous item creation.
                                </div>
                                <div class="text-dark">
                                    Please use this to delete eronous entry only.
                                </div>
                            </div>
                            <div class="col-md-1 d-flex text-right">
                                <h3 class="my-auto w-100 text-danger pr-2" style="opacity: 0.5;"><i class="fa fa-exclamation-triangle"></i></h3>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col">
                        <button type="button" class="btn btn-danger" onclick="deleteConfirm()">Yes</button>
                    </div>
                    <div class="col text-right">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


@section Scripts {

    @*FOR DATATABLE*@
    <script src="~/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/plugins/jszip/jszip.min.js"></script>
    <script src="~/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>
        $(function () {
            $("#supplier").DataTable({
                "order": [[0, 'desc']],
                "responsive": true,
                "lengthChange": false,
                "autoWidth": false,
                "paging": false,
                "info": true,
                "paging": true,
                "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
            }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
        });
    </script>


    @*CLEAR MODAL INPUT VALUES WHEN CLOSED*@
    <script>
        $('.modal').on('hidden.bs.modal', function () {
            // Clear the value of all input and select elements in the modal
            $(this).find('input').val('');
        });
    </script>

    @*OPEN modalAdd FOR ADDING A NEW SUPPLIER*@
    <script>
        function openModal() {
            $('#modalAdd').modal('show');
        }
    </script>

    @*ADD NEW SUPPLIER*@
    <script>
        function addNewSupplier()
        {
            //FORM NAME TO BE SUBMITTED
            const form = document.getElementById('CreateSupplierForm');

            //Input Name to be checked
            const inputName = document.getElementById('SupplierName');

            //Span element for data validation
            const SupplierNameSpan = document.getElementById('SupplierNameSpan')

            //Check if there are any name input
            if (inputName.value == '')
            {
                SupplierNameSpan.innerHTML = "Please enter supplier name";
            }
            else
            {
                SupplierNameSpan.innerHTML = "";

                //ADD A SPINNING LOADING EFFECT
                const div = document.createElement('div');
                const SupplierModalAdd = document.getElementById('SupplierModalAdd');
                div.classList.add('overlay');
                div.id = 'myDiv';
                div.innerHTML = '<i class="fas fa-3x fa-sync-alt fa-spin"></i>';
                SupplierModalAdd.appendChild(div);

                //Submit the form with the supplierName
                form.submit();
            }
        }
    </script>


    @*OPEN DELETE SUPPLIER MODAL AND PASS SUPPLIER ID AND NAME*@
    <script>
        function showDeleteModal(supplierId, supplierName) {
            //SHOW THE DELETE MODAL
            $('#modalDelete').modal('show');

            //Supplier Id
            const SupplierId = document.getElementById('SupplierId');
            SupplierId.value = supplierId;

            //Supplier Name
            const DeleteSupplierName = document.getElementById('DeleteSupplierName');
            DeleteSupplierName.value = supplierName;

            //Warning title
            const modalHeader = document.getElementById('modalDeleteTitle');
            modalHeader.innerHTML = "Are you sure you want to delete " + supplierName + "?";
        }
    </script>
    @*DELETE THE SUPPLIER*@
    <script>
        function deleteConfirm()
        {
            //FORM NAME TO BE SUBMITTED
            const form = document.getElementById('DeleteSupplierForm');
            //Supplier Id
            const SupplierId = document.getElementById('SupplierId');
            //Supplier Name
            const DeleteSupplierName = document.getElementById('DeleteSupplierName');

            //ADD A SPINNING LOADING EFFECT
            const div = document.createElement('div');
            const SupplierModalDelete = document.getElementById('SupplierModalDelete');
            div.classList.add('overlay');
            div.id = 'myDiv';
            div.innerHTML = '<i class="fas fa-3x fa-sync-alt fa-spin"></i>';
            SupplierModalDelete.appendChild(div);

            //Submit the form with the supplierName
            form.submit();
        }
    </script>


    @*OPEN EDIT SUPPLIER MODAL AND PASS SUPPLIER ID AND NAME*@
    <script>
        function showEditModal(supplierId, supplierName) {
            //SHOW THE DELETE MODAL
            $('#modalEdit').modal('show');

            //Supplier Id
            const EditSupplierId = document.getElementById('EditSupplierId');
            EditSupplierId.value = supplierId;

            //Supplier Name
            const OldSupplierName = document.getElementById('OldSupplierName');
            OldSupplierName.value = supplierName;

            //Warning title
            const EditSupplierTitle = document.getElementById('EditSupplierTitle');
            EditSupplierTitle.innerHTML = "Edit " + supplierName + "?";
        }
    </script>
    @*EDIT THE SUPPLIER*@
    <script>
        function editConfirm() 
        {
            //FORM NAME TO BE SUBMITTED
            const form = document.getElementById('EditSupplierForm');
            //Supplier Id
            const EditSupplierId = document.getElementById('EditSupplierId');
            //Old Supplier Name
            const OldSupplierName = document.getElementById('OldSupplierName');
            //New Supplier Name
            const NewSupplierName = document.getElementById('NewSupplierName');
            //Input Span for DataValidation
            const SupplierNameSpanEdit = document.getElementById('SupplierNameSpanEdit');
            
            //ADD A SPINNING LOADING EFFECT
            //const div = document.createElement('div');
            //const SupplierModalAdd = document.getElementById('SupplierModalDelete');
            //div.classList.add('overlay');
            //div.id = 'myDiv';
            //div.innerHTML = '<i class="fas fa-3x fa-sync-alt fa-spin"></i>';
            //SupplierModalAdd.appendChild(div);

            if (NewSupplierName.value == '') 
            {
                SupplierNameSpanEdit.innerHTML = 'Please input a new supplier name';
            }
            else if (OldSupplierName.value.toLowerCase() == NewSupplierName.value.toLowerCase())
            {
                SupplierNameSpanEdit.innerHTML = 'New supplier name is the same as the old supplier name';
            }
            else
            {
                SupplierNameSpanEdit.innerHTML = "";

                //ADD A SPINNING LOADING EFFECT
                const div = document.createElement('div');
                const SupplierModalEdit = document.getElementById('SupplierModalEdit');
                div.classList.add('overlay');
                div.id = 'myDiv';
                div.innerHTML = '<i class="fas fa-3x fa-sync-alt fa-spin"></i>';
                SupplierModalEdit.appendChild(div);

                //Submit the form with the supplierName
                form.submit();
            }
        }
    </script>


    @*FOR ALERTS*@
    <script src="~/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/plugins/toastr/toastr.min.js"></script>

    @*ALERT FOR SUCCESSFULL ADDING*@
    @if (TempData["SupplierAddSuccess"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.success("Supplier @TempData["SupplierAddSuccess"] successfully Added.")
            });
        </script>
    }

    @*ALERT IF SUPPLIER ALREADY EXIST*@
    @if (TempData["SupplierExist"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Supplier @TempData["SupplierExist"] already exist.")
            });
        </script>
    }

    @*ALERT IF SUPPLIER IS DELETED SUCCESSFULLY*@
    @if (TempData["DeleteSuccess"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.success("Supplier @TempData["DeleteSuccess"] successfully deleted.")
            });
        </script>
    }
    @*ALERT IF SUPPLIER IS ACTIVE AND USED IN ITEM CREATION*@
    @if (TempData["DeleteWarning"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Supplier @TempData["DeleteWarning"] is used in an active Item and cannot be deleted.")
            });
        </script>
    }
    @*ALERT IF SUPPLIER DOES NOT EXIST*@
    @if (TempData["DeleteError"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Supplier @TempData["DeleteError"] does not exist.")
            });
        </script>
    }
    @*ALERT IF SUPPLIER IS EDITED SUCCESSFULLY*@
    @if (TempData["EditSuccess"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.success("Supplier @TempData["EditSuccess"] was successfully change to @TempData["EditSuccessNewName"].")
            });
        </script>
    }
    @*ALERT IF SUPPLIER EDIT IS ACTIVE AND USED IN ITEM CREATION*@
    @if (TempData["EditWarning"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Supplier @TempData["EditWarning"] is used in an active Item and cannot be edited.")
            });
        </script>
    }
    @*ALERT IF SUPPLIER NEW NAME EXIST*@
    @if (TempData["EditWarningDuplicate"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.warning("Supplier @TempData["EditWarningDuplicate"] name already exist in the database.")
            });
        </script>
    }
    @*ALERT IF SUPPLIER DOES NOT EXIST*@
    @if (TempData["EditError"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Supplier @TempData["EditError"] does not exist.")
            });
        </script>
    }
}