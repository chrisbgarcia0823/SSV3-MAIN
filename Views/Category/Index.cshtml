@model IEnumerable<ShopSuppliesV3.ViewModel.Category>
@using ShopSuppliesV3.Helpers

@{
    ViewData["Title"] = "Category List";

    if (LayoutSelector.AccessType(User.Identity.Name.Substring(5)).ToLower() == "user")
    {
        Layout = "~/Views/Shared/adminLTE/_StoreLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/adminLTE/_Layout.cshtml";
    }
}

@section Styles
{
    @*FOR ALERTS*@
    <link href="~/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/plugins/toastr/toastr.min.css" rel="stylesheet" />

    @*FOR DATATABLE*@
    <link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
}


<div class="card card-outline card-danger">
    <div class="card-header">
        <h3>Category List</h3>
        <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#modalAdd" id="showModalAdd">Add Category</button>
    </div>
    <div class="card-body">
        <div id="example1_wrapper" class="dataTables_wrapper dt-bootstrap4">
            <div class="row">
                <div class="col-sm-12">
                    <div class="table-responsive">
                        <table id="category" class="table table-bordered table-striped dataTable dtr-inline" aria-describedby="example1_info">
                            <thead>
                                <tr>
                                    <td>Id</td>
                                    <td>Category</td>
                                    <td>Added By</td>
                                    <td>Date Added</td>
                                    <td></td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.Id</td>
                                        <td>@item.CategoryName</td>
                                        <td>@item.AddedByName</td>
                                        <td>@item.DateAdded.ToString("g")</td>
                                        <td>
                                            <div class="btn-group">
                                                <button class="btn btn-warning" id="showModalEdit" value="@item.CategoryName" onclick="showEditModal(@item.Id, this.value)">Edit</button> &nbsp;
                                                <button class="btn btn-danger" id="showModalDelete" value="@item.CategoryName" onclick="showDeleteModal(@item.Id, this.value)">Delete</button>
                                            </div>

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@*MODAL FOR ADDING CATEGORY*@
<div id="modalAdd" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog">
        <form asp-action="CreateCategory" id="CreateCategoryForm" method="post">
            <div class="modal-content" id="CategoryModalAdd">
                <div class="modal-header bg-success">
                    <h3>Add New Category</h3>
                </div>
                <div class="modal-body">

                    <div class="form-group row">
                        <label for="CategoryName">Category Name</label> <span class="text-danger">*</span>
                        <input type="text" class="form-control" id="CategoryName" name="CategoryName" />
                        <span id="CategoryNameSpan" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col">
                        <button type="button" class="btn btn-primary" onclick="addNewCategory()">Add Category</button>
                    </div>
                    <div class="col text-right">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@*MODAL FOR EDITING CATEGORY*@
<div id="modalEdit" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog">
        <form asp-action="EditCategory" id="EditCategoryForm" method="post">
            <input type="hidden" id="EditCategoryId" name="EditCategoryId" />
            <input type="hidden" id="OldCategoryName" name="OldCategoryName" />
            <div class="modal-content" id="CategoryModalEdit">
                <div class="modal-header bg-warning">
                    <h3 id="EditCategoryTitle"></h3>
                </div>
                <div class="modal-body">
                    <div class="callout callout-danger text-sm">
                        <div class="row">
                            <div class="col-md-11">
                                <h6 class="font-weight-bold text-danger">Attention</h6>
                                <div class="text-dark">
                                    You cannot edit category that are already used in the previous request creation.
                                </div>
                            </div>
                            <div class="col-md-1 d-flex text-right">
                                <h3 class="my-auto w-100 text-danger pr-2" style="opacity: 0.5;"><i class="fa fa-exclamation-triangle"></i></h3>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group row">
                        <label for="NewCategoryName">Edit Category</label> <span class="text-danger">*</span>
                        <input type="text" class="form-control" id="NewCategoryName" name="NewCategoryName" />
                        <span id="CategoryNameSpanEdit" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col">
                        <button type="button" class="btn btn-primary" onclick="editConfirm()">Ok</button>
                    </div>
                    <div class="col text-right">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


@*MODAL FOR THE DELETE*@
<div id="modalDelete" class="modal fade" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <form asp-action="DeleteCategory" id="DeleteCategoryForm" method="post">
            <input type="hidden" id="CategoryId" name="CategoryId" />
            <input type="hidden" id="DeleteCategoryName" name="DeleteCategoryName" />
            <div class="modal-content" id="CategoryModalDelete">
                <div class="modal-header bg-danger">
                    <h3 id="modalDeleteTitle"></h3>
                </div>
                <div class="modal-body">
                    <div class="callout callout-danger text-sm">
                        <div class="row">
                            <div class="col-md-11">
                                <h6 class="font-weight-bold text-danger">Attention</h6>
                                <div class="text-dark">
                                    You cannot delete category that are already used in the previous request creation.
                                </div>
                                <div class="text-dark">
                                    Please use this to delete eronous entry only.
                                </div>
                            </div>
                            <div class="col-md-1 d-flex text-right">
                                <h3 class="my-auto w-100 text-danger pr-2" style="opacity: 0.5;"><i class="fa fa-exclamation-triangle"></i></h3>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col">
                        <button type="button" class="btn btn-danger" onclick="deleteConfirm()">Yes</button>
                    </div>
                    <div class="col text-right">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts
    {

    @*FOR DATATABLE*@
    <script src="~/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/plugins/jszip/jszip.min.js"></script>
    <script src="~/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>
        $(function () {
            $("#category").DataTable({
                "order": [[0, 'desc']],
                "responsive": true,
                "lengthChange": false,
                "autoWidth": false,
                "paging": false,
                "info": true,
                "paging": true,
                "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
            }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
        });
    </script>


    @*CLEAR MODAL INPUT VALUES WHEN CLOSED*@
    <script>
        $('.modal').on('hidden.bs.modal', function () {
            // Clear the value of all input and select elements in the modal
            $(this).find('input').val('');
        });
    </script>

    @*OPEN modalAdd FOR ADDING A NEW CATEGORY*@
    <script>
        function openModal() {
            $('#modalAdd').modal('show');
        }
    </script>

    @*ADD NEW CATEGORY*@
    <script>
        function addNewCategory() {
            //FORM NAME TO BE SUBMITTED
            const form = document.getElementById('CreateCategoryForm');

            //Input Name to be checked
            const inputName = document.getElementById('CategoryName');

            //Span element for data validation
            const CategoryNameSpan = document.getElementById('CategoryNameSpan')

            //Check if there are any name input
            if (inputName.value == '') {
                CategoryNameSpan.innerHTML = "Please enter category name";
            }
            else {
                CategoryNameSpan.innerHTML = "";

                //ADD A SPINNING LOADING EFFECT
                const div = document.createElement('div');
                const CategoryModalAdd = document.getElementById('CategoryModalAdd');
                div.classList.add('overlay');
                div.id = 'myDiv';
                div.innerHTML = '<i class="fas fa-3x fa-sync-alt fa-spin"></i>';
                CategoryModalAdd.appendChild(div);

                //Submit the form with the categoryName
                form.submit();
            }
        }
    </script>

    @*OPEN DELETE CATEGORY MODAL AND PASS CATEGORY ID AND NAME*@
    <script>
        function showDeleteModal(categoryId, categoryName) {
            //SHOW THE DELETE MODAL
            $('#modalDelete').modal('show');

            //Category Id
            const CategoryId = document.getElementById('CategoryId');
            CategoryId.value = categoryId;

            //Category Name
            const DeleteCategoryName = document.getElementById('DeleteCategoryName');
            DeleteCategoryName.value = categoryName;

            //Warning title
            const modalHeader = document.getElementById('modalDeleteTitle');
            modalHeader.innerHTML = "Are you sure you want to delete " + categoryName + "?";
        }
    </script>
    @*DELETE THE CATEGORY*@
    <script>
        function deleteConfirm() {
            //FORM NAME TO BE SUBMITTED
            const form = document.getElementById('DeleteCategoryForm');
            //Category Id
            const CategoryId = document.getElementById('CategoryId');
            //Category Name
            const DeleteCategoryName = document.getElementById('DeleteCategoryName');

            //ADD A SPINNING LOADING EFFECT
            const div = document.createElement('div');
            const CategoryModalDelete = document.getElementById('CategoryModalDelete');
            div.classList.add('overlay');
            div.id = 'myDiv';
            div.innerHTML = '<i class="fas fa-3x fa-sync-alt fa-spin"></i>';
            CategoryModalDelete.appendChild(div);

            //Submit the form with the categoryName
            form.submit();
        }
    </script>

    @*OPEN EDIT CATEGORY MODAL AND PASS CATEGORY ID AND NAME*@
    <script>
        function showEditModal(categoryId, categoryName) {
            //SHOW THE DELETE MODAL
            $('#modalEdit').modal('show');

            //Category Id
            const EditCategoryId = document.getElementById('EditCategoryId');
            EditCategoryId.value = categoryId;

            //Category Name
            const OldCategoryName = document.getElementById('OldCategoryName');
            OldCategoryName.value = categoryName;

            //Warning title
            const EditCategoryTitle = document.getElementById('EditCategoryTitle');
            EditCategoryTitle.innerHTML = "Edit " + categoryName + "?";
        }
    </script>
    @*EDIT THE CATEGORY*@
    <script>
        function editConfirm() {
            //FORM NAME TO BE SUBMITTED
            const form = document.getElementById('EditCategoryForm');
            //Category Id
            const EditCategoryId = document.getElementById('EditCategoryId');
            //Old Category Name
            const OldCategoryName = document.getElementById('OldCategoryName');
            //New Category Name
            const NewCategoryName = document.getElementById('NewCategoryName');
            //Input Span for DataValidation
            const CategoryNameSpanEdit = document.getElementById('CategoryNameSpanEdit');

            //ADD A SPINNING LOADING EFFECT
            //const div = document.createElement('div');
            //const CategoryModalEdit = document.getElementById('CategoryModalEdit');
            //div.classList.add('overlay');
            //div.id = 'myDiv';
            //div.innerHTML = '<i class="fas fa-3x fa-sync-alt fa-spin"></i>';
            //CategoryModalEdit.appendChild(div);

            if (NewCategoryName.value == '') {
                CategoryNameSpanEdit.innerHTML = 'Please input a new category name';
            }
            else if (OldCategoryName.value.toLowerCase() == NewCategoryName.value.toLowerCase()) {
                CategoryNameSpanEdit.innerHTML = 'New category name is the same as the old category name';
            }
            else {
                CategoryNameSpanEdit.innerHTML = "";

                //ADD A SPINNING LOADING EFFECT
                const div = document.createElement('div');
                const CategoryModalEdit = document.getElementById('CategoryModalEdit');
                div.classList.add('overlay');
                div.id = 'myDiv';
                div.innerHTML = '<i class="fas fa-3x fa-sync-alt fa-spin"></i>';
                CategoryModalEdit.appendChild(div);

                //Submit the form with the categoryName
                form.submit();
            }
        }
    </script>


    @*FOR ALERTS*@
    <script src="~/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/plugins/toastr/toastr.min.js"></script>

    @*ALERT FOR SUCCESSFULL ADDING*@
    @if (TempData["CategoryAddSuccess"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.success("Category @TempData["CategoryAddSuccess"] successfully Added.")
            });
        </script>
    }

    @*ALERT IF CATEGORY ALREADY EXIST*@
    @if (TempData["CategoryExist"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Category @TempData["CategoryExist"] already exist.")
            });
        </script>
    }

    @*ALERT IF CATEGORY IS DELETED SUCCESSFULLY*@
    @if (TempData["DeleteSuccess"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.success("Category @TempData["DeleteSuccess"] successfully deleted.")
            });
        </script>
    }
    @*ALERT IF CATEGORY IS ACTIVE AND USED IN REQUEST CREATION*@
    @if (TempData["DeleteWarning"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Category @TempData["DeleteWarning"] is used in an active Request and cannot be deleted.")
            });
        </script>
    }
    @*ALERT IF Category DOES NOT EXIST*@
    @if (TempData["DeleteError"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Category @TempData["DeleteError"] does not exist.")
            });
        </script>
    }
    @*ALERT IF CATEGORY IS EDITED SUCCESSFULLY*@
    @if (TempData["EditSuccess"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.success("Category @TempData["EditSuccess"] was successfully change to @TempData["EditSuccessNewName"].")
            });
        </script>
    }
    @*ALERT IF CATEGORY EDIT IS ACTIVE AND USED IN REQUEST CREATION*@
    @if (TempData["EditWarning"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Category @TempData["EditWarning"] is used in an active Request and cannot be edited.")
            });
        </script>
    }
    @*ALERT IF CATEGORY NEW NAME EXIST*@
    @if (TempData["EditWarningDuplicate"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.warning("Category @TempData["EditWarningDuplicate"] name already exist in the database.")
            });
        </script>
    }
    @*ALERT IF CATEGORY DOES NOT EXIST*@
    @if (TempData["EditError"] != null)
    {
        <script type="text/javascript">
            $(function () {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
                toastr.error("Category @TempData["EditError"] does not exist.")
            });
        </script>
    }

}